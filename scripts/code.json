{
  "Wordpress 数据迁移指南": [
    {
      "lang": "",
      "value": "UPDATE wp_posts SET post_content =replace(post_content,'tomyail.com/blog','localhost/wordpress');"
    }
  ],
  "Flash的坐标精度": [
    {
      "lang": "",
      "value": "protected function updateFrame(event:Event):void\n{\n    preX = fish.x;\n    preY = fish.y;\n    fish.x = preX * cos - preY * sin;\n    fish.y = preY * cos + preX * sin;\n}"
    },
    {
      "lang": "",
      "value": "protected function updateFrame(event:Event):void\n{\n    preX = currentX;\n    preY = currentY;\n    currentX = preX * cos - preY * sin;\n    currentY = preY * cos + preX * sin;\n    fish.x = currentX;\n    fish.y = currentY;\n    trace(\"preX\",preX,\"curX\",currentX,\"fishX\",fish.x);\n}"
    },
    {
      "lang": "",
      "value": "preX 49.87820251299122 curX 49.80973490458729 fishX 49.8\npreX 49.80973490458729 curX 49.72609476841368 fishX 49.7\npreX 49.72609476841368 curX 49.627307582066116 fishX 49.6\npreX 49.627307582066116 curX 49.51340343707853 fishX 49.5\npreX 49.51340343707853 curX 49.3844170297569 fishX 49.35\npreX 49.3844170297569 curX 49.240387650610415 fishX 49.2\npreX 49.240387650610415 curX 49.08135917238321 fishX 49.05\npreX 49.08135917238321 curX 48.9073800366903 fishX 48.9\npreX 48.9073800366903 curX 48.71850323926178 fishX 48.7\npreX 48.71850323926178 curX 48.514786313799846 fishX 48.5\npreX 48.514786313799846 curX 48.296291314453434 fishX 48.25\npreX 48.296291314453434 curX 48.06308479691596 fishX 48.05"
    },
    {
      "lang": "",
      "value": "package demo\n{\n    import flash.display.Sprite;\n    import flash.events.*;\n    import flash.geom.Matrix;\n    import flash.geom.Point;\n\n    public class FishRoundFly extends Sprite\n    {\n        private var fish:Sprite = new Sprite;\n//        private var centerPoint:Point = new Point;\n        private var increaseDegree:Number = 1;\n\n        private var cos:Number;\n        private var sin:Number;\n        private var radias:Number;\n        private var preX:Number;\n        private var preY:Number;\n        private var currentX:Number;\n        private var currentY:Number;\n        public function FishRoundFly()\n        {\n            fish.graphics.beginFill(0);\n            fish.graphics.drawRect(0,0,20,20);\n            addChild(fish);\n\n            fish.x = 50\n            fish.y = 0;\n            currentX = fish.x;\n            currentY = fish.y\n            radias = increaseDegree*Math.PI/180;\n            cos = Math.cos(radias);\n            sin = Math.sin(radias);\n\n            this.addEventListener(Event.ENTER_FRAME,updateFrame);\n            this.graphics.lineStyle(1);\n        }\n        protected function updateFrame(event:Event):void\n        {\n            preX = currentX;\n            preY = currentY;\n            currentX = preX * cos - preY * sin;\n            currentY = preY * cos + preX * sin;\n            fish.x = currentX;\n            fish.y = currentY;\n            this.graphics.lineTo(fish.x,fish.y);\n            trace(\"preX\",preX,\"curX\",currentX,\"fishX\",fish.x);\n        }\n    }\n}"
    }
  ],
  "Box2D使用笔记": [
    {
      "lang": "",
      "value": "package\n{\n    import Box2D.Collision.Shapes.b2PolygonShape;\n    import Box2D.Common.Math.b2Vec2;\n    import Box2D.Dynamics.b2Body;\n    import Box2D.Dynamics.b2BodyDef;\n    import Box2D.Dynamics.b2DebugDraw;\n    import Box2D.Dynamics.b2FixtureDef;\n    import Box2D.Dynamics.b2World;\n\n    import flash.display.Sprite;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n\n    [SWF(backgroundColor=\"0x333333\",width=\"800\",height=\"600\",frameRate=\"30\")]\n    public class Simple extends Sprite\n    {\n        private const PIXELS_TO_METRE:int = 50;\n        private var _world:b2World;\n        public function Simple()\n        {\n            stage.scaleMode = StageScaleMode.NO_SCALE;\n\n            //定义重力向量\n            var gravity:b2Vec2 = new b2Vec2(0,10);\n            //实例化世界（接受两个参数重力向量和当物体停止移动时是否允许物体休眠，一个休眠中的物体不需要任何模拟）\n            _world = new b2World(gravity,true);\n\n            //实例化刚体定义数据\n            var groundBodyDef:b2BodyDef= new b2BodyDef();\n            //设置刚体的初始坐标在1，1米处\n            groundBodyDef.position.Set(1,1);\n//            groundBodyDef.type = b2Body.b2_dynamicBody;\n\n            //实例化一个刚体（将刚体定义数据交给世界能自动创建刚体）\n            var groundBody:b2Body = _world.CreateBody(groundBodyDef);\n\n            //实例化刚体的形状\n            var groundBox:b2PolygonShape = new b2PolygonShape();\n            //将形状定义成2X2的方形\n            groundBox.SetAsBox(1,1);\n\n            //实例化粘物\n            var groundFixtureDef:b2FixtureDef = new b2FixtureDef();\n            //粘上形状。。。\n            groundFixtureDef.shape = groundBox;\n            //让刚体表现出粘物绑定形状的形状\n            groundBody.CreateFixture(groundFixtureDef);\n\n            /**\n            * 以上的工作只是定义好必要的数据，但还是需要下面相关的代码来渲染出来\n            * 绘图相关\n            */\n            var debugSprite:Sprite = new Sprite();\n            addChild(debugSprite);\n            var debugDraw:b2DebugDraw = new b2DebugDraw();\n            debugDraw.SetSprite(debugSprite);\n            debugDraw.SetLineThickness( 1.0);\n            debugDraw.SetAlpha(1);\n            debugDraw.SetFillAlpha(0.4);\n            //设置缩放量\n            debugDraw.SetDrawScale(PIXELS_TO_METRE);\n            //设置绘图模式\n            debugDraw.SetFlags(b2DebugDraw.e_shapeBit);\n            _world.SetDebugDraw(debugDraw);\n\n            _world.DrawDebugData();\n        }\n    }\n}"
    }
  ],
  "使用Flash单元测试框架asunit": [
    {
      "lang": "",
      "value": "package test\n{\n\n    public class ClassA\n    {\n\n        [AfterClass]\n        public static function ac():void\n        {\n            trace(\"ac\");\n        }\n\n        [BeforeClass]\n        public static function bc1():void\n        {\n            trace(\"bc1\");\n        }\n\n        [BeforeClass(order = -1)]\n        public static function bc2():void\n        {\n            trace(\"bc2\");\n        }\n\n        public function ClassA()\n        {\n        }\n\n        [After]\n        public function a():void\n        {\n            trace(this , \"a\");\n        }\n\n        [Before]\n        public function b():void\n        {\n            trace(this , \"b\");\n        }\n\n        [Test]\n        public function test1():void\n        {\n            trace(this , \"Test1\");\n        }\n\n        [Test(order = -1)]\n        public function test2():void\n        {\n            trace(this , \"Test2\");\n        }\n\n        [Ignore(description = \"the ignore function\")]\n        [Test]\n        public function test3():void\n        {\n            trace(this , \"Test3\");\n        }\n    }\n}"
    },
    {
      "lang": "",
      "value": "package test\n{\n    import asunit.framework.IAsync;\n\n    import flash.events.Event;\n    import flash.net.URLLoader;\n    import flash.net.URLRequest;\n\n    public class AsynTest\n    {\n        public function AsynTest()\n        {\n        }\n\n        [Inject]\n        public var asyn:IAsync;\n\n        [Test]\n        public function asynTest():void\n        {\n            var loader:URLLoader = new URLLoader();\n            loader.addEventListener(Event.COMPLETE,asyn.add(loadComplete,500));\n            loader.load(new URLRequest(\"someurl\"));\n        }\n\n        private function loadComplete(e:Event):void\n        {\n            //assertSomeThing\n        }\n    }\n}"
    },
    {
      "lang": "",
      "value": "package test\n{\n    import asunit.events.TimeoutCommandEvent;\n    import asunit.framework.Async;\n    import asunit.framework.IAsync;\n    import asunit.framework.TimeoutCommand;\n\n    import flash.events.Event;\n    import flash.events.EventDispatcher;\n\n    public class EventAsynTest\n    {\n        public function EventAsynTest()\n        {\n        }\n\n        [Inject]\n        public var async:IAsync;\n        private var dispatcher:EventDispatcher;\n\n        [Test]\n        public function eventAsynTest():void\n        {\n            dispatcher = new EventDispatcher();\n            var asyn:Async = new Async();\n            asyn.proceedOnEvent(dispatcher , Event.ACTIVATE , 200);\n            /**以下两种监听虽然能检测到是否超时但是超时警告不会加入测试结果，如果需要在测试结果中反馈，使用async注入*/\n            (asyn.getPending()[0] as TimeoutCommand).addEventListener(TimeoutCommandEvent.CALLED , onCall);\n            (asyn.getPending()[0] as TimeoutCommand).addEventListener(TimeoutCommandEvent.TIMED_OUT , onTimeout);\n            /**这种方式会在超过500ms如果没执行onCall函数会在结果中报告超时异常*/\n            //(asyn.getPending()[0] as TimeoutCommand).addEventListener(TimeoutCommandEvent.CALLED,async.add(onCall,500));\n            /**这个事件在需要的时候发出*/\n            //dispatcher.dispatchEvent(new Event(Event.ACTIVATE));\n        }\n\n        /**call when dispatcher dispatch an Event.Active Event*/\n        private function onCall(e:TimeoutCommandEvent):void\n        {\n            //someAsserttest\n        }\n\n        /**/\n        private function onTimeout(e:TimeoutCommandEvent):void\n        {\n            //timeout\n        }\n    }\n}"
    }
  ],
  "理解Nape的Interaction": [
    {
      "lang": "",
      "value": "private function testSimpleFilter():void\n{\n    createBall(10, 5, 5, new Material(Number.POSITIVE_INFINITY));\n    var box:Body = createBox(100, 10, BodyType.KINEMATIC, 50, 100);\n    new PushButton(this, 200, 100, \"swap:filter\", clickCallback);\n    function clickCallback(e:MouseEvent):void\n    {\n        box.shapes.at(0).filter.collisionMask = ~box.shapes.at(0).filter.collisionMask;\n    }\n}"
    }
  ],
  "Nape的几何相关笔记(GeomPoly)": [
    {
      "lang": "",
      "value": "keep public static function regular(xRadius:Float, yRadius:Float, edgeCount:Int, angleOffset=0.0, weak:Bool=false):Array<Vec2> {\n\n        DEBUG(if(isNaN(xRadius) || isNaN(yRadius) || isNaN(angleOffset))\n\n            throw \"Error: Polygon.regular cannot accept NaN arguments\";\n\n        )\n\n        var ret = [];\n\n        var dangle = Math.PI*2/edgeCount;\n\n        for(i in 0...edgeCount) {\n\n            var ang = i*dangle + angleOffset;\n\n            var x = Vec2.get(Math.cos(ang)*xRadius,Math.sin(ang)*yRadius,weak);\n\n            ret.push(x);\n\n        }\n\n        return ret;\n\n    }"
    }
  ],
  "unity 4.6关于RectTransform的一些研究": [
    {
      "lang": "",
      "value": "private Vector3 GetSpacePos(RectTransform rect, Canvas canvas, Camera camera)\n{\n    if (canvas.renderMode == RenderMode.ScreenSpaceOverlay)\n    {\n        return rect.position;\n    }\n    return camera.WorldToScreenPoint(rect.position);\n\n}"
    },
    {
      "lang": "",
      "value": "private void GetSpaceCorners(RectTransform rect, Canvas canvas, Vector3[] corners,Camera camera)\n{\n    if (camera == null)\n    {\n        camera = Camera.main;\n    }\n    rect.GetWorldCorners(corners);\n    if (canvas.renderMode == RenderMode.ScreenSpaceOverlay)\n    {\n\n    }\n    else\n    {\n        for (var i = 0; i < corners.Length; i++)\n        {\n            corners[i] = camera.WorldToScreenPoint(corners[i]);\n        }\n    }\n}"
    },
    {
      "lang": "",
      "value": "public Rect GetSpaceRect(Canvas canvas, RectTransform rect, Camera camera)\n{\n    Rect spaceRect = rect.rect;\n    Vector3 spacePos = GetSpacePos(rect, canvas, camera);\n    //lossyScale\n    spaceRect.x = spaceRect.x * rect.lossyScale.x + spacePos.x;\n    spaceRect.y = spaceRect.y * rect.lossyScale.y + spacePos.y;\n    spaceRect.width = spaceRect.width * rect.lossyScale.x;\n    spaceRect.height = spaceRect.height * rect.lossyScale.y;\n    return spaceRect;\n}\n\npublic bool RectContainsScreenPoint(Vector3 point, Canvas canvas, RectTransform rect, Camera camera)\n{\n    if (canvas.renderMode != RenderMode.ScreenSpaceOverlay)\n    {\n        return RectTransformUtility.RectangleContainsScreenPoint(rect, point, camera);\n    }\n\n    return GetSpaceRect(canvas, rect, camera).Contains(point);\n}\n\n// Update is called once per frame\nvoid Update()\n{\n    if (RectContainsScreenPoint(Input.mousePosition, _canvas, rect, _canvas.camera))\n    {\n        Image image = _uiObject.GetComponent<Image>();\n        var spaceRect = GetSpaceRect(_canvas, rect, camera);\n        var localPos = Input.mousePosition - new Vector3(spaceRect.x, spaceRect.y);\n        var realPos = new Vector2(localPos.x , localPos.y );\n        var imageToTextre = new Vector2(image.sprite.textureRect.width/spaceRect.width,\n            image.sprite.textureRect.height/spaceRect.height);\n        _resultImage.color = _uiObject.GetComponent<Image>().sprite.texture.GetPixel((int)(realPos.x*imageToTextre.x), (int)(realPos.y*imageToTextre.y));\n    }\n}"
    }
  ],
  "理解Unity3D里的Coroutine": [
    {
      "lang": "",
      "value": "using System;\nusing UnityEngine;\nusing System.Collections;\nnamespace Script\n{\n    public class CoroutinesDemo:MonoBehaviour\n    {\n        void Start()\n        {\n            IEnumerator ator =  yieldFun1();\n            Debug.Log(1);\n            while(ator.MoveNext())\n            {\n                Debug.Log(2);\n                Debug.Log(ator.Current);\n            }\n        }\n\n        IEnumerator yieldFun1()\n        {\n            Debug.Log(3);\n            yield return 1;89\n            Debug.Log(4);\n            yield return 2;\n            Debug.Log(5);\n            yield return 3;\n        }\n    }\n}"
    },
    {
      "lang": "",
      "value": "using System;\nusing UnityEngine;\nusing System.Collections;\nnamespace Script\n{\n    public class CoroutinesDemo:MonoBehaviour\n    {\n        void Start()\n        {\n            StartCoroutine(yieldFun2());\n            Debug.Log(\"End yieldFun2\");\n        }\n\n        IEnumerator yieldFun2()\n        {\n            Debug.Log(\"1\"+DateTime.Now);\n            yield return new WaitForSeconds(1f);\n            Debug.Log(\"2\"+DateTime.Now);\n            yield return new WaitForSeconds(1f);\n            Debug.Log(\"3\"+DateTime.Now);\n        }\n    }\n}"
    },
    {
      "lang": "",
      "value": "111/14/2014 14:34:57\nEnd yieldFun2\n211/14/2014 14:34:58\n311/14/2014 14:34:59"
    },
    {
      "lang": "",
      "value": "Debug.Log(\"1\"+DateTime.Now);\nyield return new WaitForSeconds(1f);"
    },
    {
      "lang": "",
      "value": "Debug.Log(\"2\"+DateTime.Now);\nyield return new WaitForSeconds(1f);"
    },
    {
      "lang": "",
      "value": "using System;\nusing UnityEngine;\nusing System.Collections;\nnamespace Script\n{\n    public class CoroutinesDemo:MonoBehaviour\n    {\n        void Start()\n        {\n            test1();\n            test2();\n        }\n\n        IEnumerator yieldFun1()\n        {\n            Debug.Log(\"1:1\"+DateTime.Now);\n            yield return new WaitForSeconds(1f);\n            yield break;\n            Debug.Log(\"1:2\"+DateTime.Now);\n            yield return new WaitForSeconds(1f);\n            Debug.Log(\"1:3\"+DateTime.Now);\n        }\n\n        IEnumerator yieldFun2()\n        {\n            Debug.Log(\"2:1\"+DateTime.Now);\n            yield return new WaitForSeconds(1f);\n            Debug.Log(\"2:2\"+DateTime.Now);\n            yield return new WaitForSeconds(1f);\n            Debug.Log(\"2:3\"+DateTime.Now);\n        }\n\n        IEnumerator yieldFun3()\n        {\n            while(true)\n            {\n                Debug.Log(\"3\"+DateTime.Now);\n                yield return new WaitForSeconds(1f);\n            }\n        }\n\n        void test1()\n        {\n            StartCoroutine(yieldFun1());\n        }\n\n        void test2()\n        {\n            StartCoroutine(stop());\n        }\n\n\n        IEnumerator stop()\n        {\n\n\n            StartCoroutine(\"yieldFun3\");\n//            StartCoroutine(yieldFun3());\n            yield return new WaitForSeconds(2f);\n            StopCoroutine(\"yieldFun3\");\n//            StopCoroutine(yieldFun3());\n        }\n\n    }\n}"
    },
    {
      "lang": "",
      "value": "1:111/14/2014 17:42:03\n311/14/2014 17:42:03\n311/14/2014 17:42:04"
    },
    {
      "lang": "",
      "value": "yield return <expression>;"
    },
    {
      "lang": "",
      "value": "基本数据对象:立即结束\nYieldInstruction对象,包括(WaitForSeconds,WaitForFixedUpdate):等待时间或者等待更新完毕\nWWW对象:下载完毕\n自定义"
    },
    {
      "lang": "",
      "value": "using System;\nusing UnityEngine;\nusing System.Collections;\nnamespace Script\n{\n    public class CoroutinesDemo:MonoBehaviour\n    {\n        void Start()\n        {\n//            if image is too small ,you can try a big file\n//            string url = \"https://www.google.com.hk/images/srpr/logo11w.png\";\n            string url = \"http://www.baidu.com/img/bd_logo1.png\";\n            StartCoroutine(loudRes(url));\n        }\n\n\n        IEnumerator loudRes(string url)\n        {\n            WWW www = new WWW(url);\n            while (!www.isDone)\n            {\n                Debug.Log(www.progress);\n//                yield return www;\n                yield return null;\n            }\n            Debug.Log(\"down\");\n\n\n        }\n\n    }\n}"
    }
  ],
  "js和nodejs备忘": [
    {
      "lang": "",
      "value": "npm init"
    },
    {
      "lang": "",
      "value": ".\n├── app\n│   ├── Base.js\n│   ├── Child.js\n│   └── App.js\n└── node_modules\n    └── moment"
    }
  ],
  "从Wordpress迁移到Hexo": [
    {
      "lang": "",
      "value": "├── source\n│   ├── _drafts\n│   │   ├── elasticsearch.md\n│   │   ├── js-native-app.md\n│   │   └── shadowsocks-on-netgear-R6300-v2.md\n│   ├── _posts\n│   │   ├── alpha-error.md\n│   │   ├── as2-class-question.md\n│   │   ├── assess-test.md\n│   ├── images\n│   │   ├── default_avatar.jpg\n│   │   └── uploads\n│   │       └── default_avatar.jpg"
    },
    {
      "lang": "",
      "value": "![test](/assess-test/default_avatar.jpg)\n{% asset_img default_avatar.jpg test %}"
    },
    {
      "lang": "",
      "value": "├── source\n│   ├── _drafts\n│   │   ├── elasticsearch.md\n│   │   ├── js-native-app.md\n│   │   └── shadowsocks-on-netgear-R6300-v2.md\n│   ├── _posts\n│   │   ├── alpha-error.md\n│   │   ├── as2-class-question.md\n│   │   ├── assess-test\n│   │   │   └── default_avatar.jpg\n│   │   ├── assess-test.md\n│   ├── images\n│   │   ├── default_avatar.jpg\n│   │   └── uploads\n│   │       └── default_avatar.jpg"
    },
    {
      "lang": "",
      "value": "<IfModule mod_rewrite.c>\nRewriteEngine On\nredirect 301 /blog http://blog.tomyail.com\n</IfModule>"
    },
    {
      "lang": "",
      "value": "<IfModule mod_rewrite.c>\nRewriteEngine On\nredirect 301 /935 http://blog.tomyail.com/learning-git-via-eclipse/\n</IfModule>"
    }
  ],
  "Redux入门": [
    {
      "lang": "",
      "value": "current state { user: { user: { name: 'default user' } },item: { items: [ [Object] ] } }\ncurrent state { user: { user: { name: 'default user' } },item: { items: [ [Object], [Object] ] } }\ncurrent state { user: { user: { name: 'default user' } },item: { items: [ [Object], [Object], [Object] ] } }\ncurrent state { user: { user: { name: 'newName' } },     item: { items: [ [Object], [Object], [Object] ] } }"
    },
    {
      "lang": "",
      "value": "//Object Spread\n{ ...state, message: action.value}"
    }
  ],
  "加速electron在国内的下载速度": [
    {
      "lang": "",
      "value": "DEBUG=* ELECTRON_MIRROR=\"https://npm.taobao.org/mirrors/electron/\" npm install electron"
    },
    {
      "lang": "",
      "value": "export ELECTRON_MIRROR=\"https://npm.taobao.org/mirrors/electron/\""
    },
    {
      "lang": "",
      "value": "$HOME/.electron"
    }
  ],
  "使用travis自动部署hexo日志": [
    {
      "lang": "",
      "value": "language: node_js\n\nnode_js: #node 版本\n- stable\n\nos: # 虚拟机系统\n- osx\n\ncache: #缓存不更新的文件\n  apt: true\n  directories:\n  - node_modules"
    },
    {
      "lang": "",
      "value": "ssh-keygen -t rsa -b 4096 -C \"youremail\""
    },
    {
      "lang": "",
      "value": "gem install travis"
    },
    {
      "lang": "",
      "value": "travis login --auto"
    },
    {
      "lang": "",
      "value": "travis login --github-token 'yourToken'"
    },
    {
      "lang": "",
      "value": "travis encrypt-file id_rsa_repo"
    },
    {
      "lang": "",
      "value": "Host github.com\n    User git\n    StrictHostKeyChecking no\n    IdentityFile ~/.ssh/id_rsa\n    IdentitiesOnly yes"
    },
    {
      "lang": "",
      "value": "before_install:\n- openssl aes-256-cbc -K $encrypted_XXX_key -iv $encrypted_XXX_iv -in id_rsa_repo.enc -out ~/.ssh/id_rsa -d\n- chmod 600 ~/.ssh/id_rsa\n- eval $(ssh-agent)\n- ssh-add ~/.ssh/id_rsa\n- cp ssh_config ~/.ssh/config"
    },
    {
      "lang": "",
      "value": "git@github.com:username/reponame.git"
    },
    {
      "lang": "",
      "value": "https://$GH_TOKEN@github.com/username/reponame.git"
    },
    {
      "lang": "",
      "value": "before_install:\n- git remote rm origin\n- git remote add origin https://$GH_TOKEN@github.com/username/reponame.git"
    }
  ],
  "使用 git submodule 同步主从项目的依赖关系": [
    {
      "lang": "",
      "value": "git submodule add {url} [name]"
    },
    {
      "lang": "",
      "value": "A1 -> A2\nB1 -> B2"
    }
  ],
  "如何花30分钟解决 eslint 产生的各种错误": [
    {
      "lang": "",
      "value": "yarn add -D eslint eslint eslint-plugin-react babel-eslint"
    },
    {
      "lang": "",
      "value": "prettier --write --trailing-comma es5 --single-quote \"src/**/*.{js,jsx,css}\""
    },
    {
      "lang": "",
      "value": "yarn add global jscodeshift"
    },
    {
      "lang": "",
      "value": "git clone https://github.com/cpojer/js-codemod.git"
    },
    {
      "lang": "",
      "value": "jscodeshift -t js-codemod/transforms/no-vars.js ./lint-demo/src"
    },
    {
      "lang": "",
      "value": "jscodeshift -t js-codemod/transforms/template-literals.js ./lint-demo/src"
    },
    {
      "lang": "",
      "value": "{\n  \"scripts\": {\n    \"precommit\": \"lint-staged\"\n  },\n  \"lint-staged\": {\n    \"*.js\": [\"eslint --fix\", \"git add\"]\n  }\n}"
    },
    {
      "lang": "",
      "value": "   \"*.js\": [\"eslint --fix\", \"git add\"]"
    },
    {
      "lang": "",
      "value": "\"{src,dev}/**/*.{js,jsx}\": [\n  \"eslint --fix\",\n  \"prettier --write --trailing-comma es5 --single-quote\",\n  \"git add\"\n]"
    }
  ],
  "react-router 升级填坑记录": [
    {
      "lang": "",
      "value": "                  onEnter\nv3  match route +----------> render component\n\nv4  match route +----------> render component"
    }
  ],
  "electron 集成 addon 方案简介": [
    {
      "lang": "",
      "value": "npm install --arch=ia32 electron"
    }
  ],
  "RxJS 和响应式编程简介": [
    {
      "lang": "",
      "value": "const mergeMap = fn => observable => {\n  return new Observable(sucribe => {\n    const sub = observable.subscribe(item => {\n      //用 from 把 fn(item)转成 Observerable\n      from(fn(item)).subscribe(innerItem => {\n        sucribe.next(innerItem);\n      });\n    });\n\n    return () => {\n      sub.unsubscribe();\n    };\n  });\n};\n\nfromEvent(document.getElementById(\"button\"), \"click\").pipe(\n  scan((acc, cur) => acc + 1, 0),\n  tap(console.log),\n  mergeMap(item => timer(item * 1000).pipe(mapTo(item)))\n).subscribe(console.log);"
    }
  ],
  "async-flow:一个帮助我们用声明式的代码风格编写复杂异步逻辑的轮子": [
    {
      "lang": "",
      "value": "const getMode = (mode, context) => {\n  switch (mode) {\n    case \"studentRevise\":\n      return studentRevise(context);\n    case \"teacherComment\":\n      return teacherComment(context);\n    case \"studentPractice\":\n      return studentPractice(context);\n    case \"teacherPreviewFlow\":\n      return teacherPreviewFlow(context);\n  }\n};\n\n//假设值学生做题模式\ngetMode(\"studentPractice\", { homeworId: \"123\" }).subscribe((data) => {\n  data.getHomeWorkList; //作业列表\n  data.getExerciseDetetail; //作业详情\n  data.getUserAnswerById; //用户答案\n});"
    }
  ],
  "博客文章样式测试": [
    {
      "lang": "",
      "value": "// Some comments\nline 1 of code\nline 2 of code\nline 3 of code"
    },
    {
      "lang": "",
      "value": "and multiple paragraphs."
    },
    {
      "lang": "",
      "value": "    { some code, part of Definition 2 }\n\nThird paragraph of definition 2."
    }
  ]
}